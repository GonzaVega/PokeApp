{"version":3,"sources":["components/PokemonList.module.css","components/PokemonItem.js","components/PokemonList.js","components/PokemonTypeFilter.js","App.js","index.js","components/PokemonItem.module.css"],"names":["module","exports","PokemonItem","props","capitalizeFirstLetter","str","toUpperCase","slice","content","name","style","color","strongTo","borderColor","worstAgainst","className","classes","PokemonList","pokemons","map","pokemon","index","key","strongAgainst","PokemonTypeFilter","useState","filtered","setFiltered","setPokemon","isValid","setIsValid","isFiltered","setIsFiltered","isTouched","setIsTouched","inputIsInvalid","inputIsNotFiltered","onSubmit","event","preventDefault","trim","filteredPokemon","pokemonTypes","filter","type","toLowerCase","length","onChange","target","value","onBlur","placeholder","App","categories","setCategories","isLoading","setIsLoading","error","setError","fetchCategoriesHandler","useCallback","fetch","response","ok","Error","json","data","results","pokemonData","url","then","abilitiesObject","weaknesess","strenghts","nameCategory","damage_relations","no_damage_from","item","push","half_damage_from","double_damage_to","no_damage_to","half_damage_to","double_damage_from","weaknessesSet","Intl","ListFormat","format","Set","eachResponse","prevArray","message","useEffect","Fragment","src","alt","onClick","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.5dafbaf1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pokemons-list\":\"PokemonList_pokemons-list__1XAJ1\"};","import React from \"react\";\n\nimport classes from \"./PokemonItem.module.css\";\n\nconst PokemonItem = (props) => {\n  function capitalizeFirstLetter(str) {\n    return str[0].toUpperCase() + str.slice(1);\n  }\n  let content = (\n    <li>\n      {\" \"}\n      <h2>Pokémon class: {capitalizeFirstLetter(props.name)}</h2>\n      <h3 style={{ color: \"#AAFF00\" }}>Strong against: {props.strongTo}</h3>\n      <h3 style={{ color: \"#522719\", borderColor: \"whitesmoke\" }}>\n        Weaker against: {props.worstAgainst}\n      </h3>\n    </li>\n  );\n  if (!props.strongTo && !props.worstAgainst) {\n    content = (\n      <li>\n        {\" \"}\n        <h2>Pokémon class: {capitalizeFirstLetter(props.name)}</h2>\n        <h3 style={{ color: \"white\" }}>\n          {\" \"}\n          No data available, Proffesor Oak is still researching!\n        </h3>\n      </li>\n    );\n  }\n  return <div className={classes.PokemonItem}>{content} </div>;\n};\n\nexport default PokemonItem;\n","import React from \"react\";\n\nimport PokemonItem from \"./PokemonItem\";\nimport classes from \"./PokemonList.module.css\";\n\nconst PokemonList = (props) => {\n  return (\n    <ul className={classes[\"pokemons-list\"]}>\n      {props.pokemons.map((pokemon, index) => (\n        <PokemonItem\n          key={index}\n          name={pokemon.name}\n          strongTo={pokemon.strongAgainst}\n          worstAgainst={pokemon.worstAgainst}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default PokemonList;\n","import React, { useState } from \"react\";\r\nimport PokemonList from \"./PokemonList\";\r\n\r\nconst PokemonTypeFilter = (props) => {\r\n  const [filtered, setFiltered] = useState(\"\");\r\n  const [pokemon, setPokemon] = useState([]);\r\n  const [isValid, setIsValid] = useState(false);\r\n  const [isFiltered, setIsFiltered] = useState(null);\r\n  const [isTouched, setIsTouched] = useState(false);\r\n\r\n  const pokemonInputHandler = (event) => {\r\n    setFiltered(event.target.value);\r\n    if (event.target.value.trim() !== \"\") {\r\n      setIsValid(true);\r\n    }\r\n  };\r\n\r\n  const inputBlurHandler = () => {\r\n    setIsTouched(true);\r\n    if (filtered.trim() === \"\") {\r\n      setIsValid(false);\r\n    }\r\n  };\r\n  const typeFilterHandler = (event) => {\r\n    event.preventDefault();\r\n    setIsTouched(true);\r\n\r\n    if (filtered.trim() === \"\") {\r\n      setIsValid(false);\r\n      return;\r\n    }\r\n\r\n    const filteredPokemon = props.pokemonTypes.filter(\r\n      (type) => type.name === filtered.toLowerCase().trim(\"\")\r\n    );\r\n\r\n    setIsFiltered(true);\r\n\r\n    if (filteredPokemon.length === 0) {\r\n      setIsFiltered(false);\r\n    }\r\n\r\n    return setPokemon(filteredPokemon);\r\n  };\r\n  const inputIsInvalid = !isValid && isTouched;\r\n  const inputIsNotFiltered = isValid && isTouched && !isFiltered;\r\n  let content = (\r\n    <div>\r\n      <h3> Pokémon filter </h3>\r\n      <form onSubmit={typeFilterHandler}>\r\n        <input\r\n          type=\"text\"\r\n          onChange={pokemonInputHandler}\r\n          onBlur={inputBlurHandler}\r\n          placeholder=\"Enter a Pokémon type\"\r\n        ></input>\r\n        <button type=\"submit\">Filter Pokémon types</button>\r\n      </form>\r\n      {isValid === true && isFiltered && (\r\n        <h3>\r\n          {\" \"}\r\n          Your filtered Pokémon type: <PokemonList pokemons={pokemon} />{\" \"}\r\n          <hr></hr>\r\n        </h3>\r\n      )}\r\n      {inputIsInvalid && (\r\n        <h4 style={{ color: \"red\" }}>\r\n          {\" \"}\r\n          Please enter a Pokémon type to search{\" \"}\r\n        </h4>\r\n      )}\r\n      {inputIsNotFiltered && (\r\n        <h4 style={{ color: \"red\" }}>\r\n          {\" \"}\r\n          The requested Pokémon type couldn't be found, try again!{\" \"}\r\n        </h4>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  return <div>{content}</div>;\r\n};\r\n\r\nexport default PokemonTypeFilter;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\n\nimport PokemonList from \"./components/PokemonList\";\nimport PokemonTypeFilter from \"./components/PokemonTypeFilter\";\n\nimport \"./App.css\";\n\nfunction App() {\n  const [categories, setCategories] = useState([]);\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchCategoriesHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\"https://pokeapi.co/api/v2/type/\");\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const data = await response.json();\n\n      const transformedCategories = data.results.map(async (pokemonData) => {\n        const eachResponse = await fetch(pokemonData.url)\n          .then((response) => {\n            return response.json();\n          })\n          .then((abilitiesObject) => {\n            let weaknesess = [];\n            let strenghts = [];\n            let nameCategory = abilitiesObject.name;\n\n            for (let item of abilitiesObject.damage_relations.no_damage_from) {\n              strenghts.push(item.name);\n            }\n            for (let item of abilitiesObject.damage_relations\n              .half_damage_from) {\n              strenghts.push(item.name);\n            }\n            for (let item of abilitiesObject.damage_relations\n              .double_damage_to) {\n              strenghts.push(item.name);\n            }\n            for (let item of abilitiesObject.damage_relations.no_damage_to) {\n              weaknesess.push(item.name);\n            }\n            for (let item of abilitiesObject.damage_relations.half_damage_to) {\n              weaknesess.push(item.name);\n            }\n            for (let item of abilitiesObject.damage_relations\n              .double_damage_from) {\n              weaknesess.push(item.name);\n            }\n            const weaknessesSet = new Intl.ListFormat().format([\n              ...new Set(weaknesess),\n            ]);\n            const strenghtsSet = new Intl.ListFormat().format([\n              ...new Set(strenghts),\n            ]);\n\n            return {\n              name: nameCategory,\n              strongAgainst: strenghtsSet,\n              worstAgainst: weaknessesSet,\n            };\n          });\n\n        setCategories((prevArray) => [...prevArray, eachResponse]);\n      });\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }, []);\n\n  useEffect(() => {\n    fetchCategoriesHandler();\n  }, [fetchCategoriesHandler]);\n\n  let content = <h3>Found no Pokémon classes.</h3>;\n\n  if (categories.length > 0) {\n    content = (\n      <div>\n        {\" \"}\n        <h3> Pokémon Types </h3>\n        <PokemonList pokemons={categories} />{\" \"}\n      </div>\n    );\n  }\n\n  if (error) {\n    content = <h3>{error}</h3>;\n  }\n\n  if (isLoading) {\n    content = <h3>Loading...</h3>;\n  }\n\n  return (\n    <React.Fragment>\n      <div>\n        <img\n          src=\"https://i.pinimg.com/originals/9e/39/23/9e3923825ba4a4fa967858f980b8460f.png\"\n          alt=\"Pokemon logo\"\n        />\n      </div>\n\n      <section>\n        <button onClick={fetchCategoriesHandler}>Fetch Pokemon Classes</button>\n      </section>\n      <section>\n        <PokemonTypeFilter pokemonTypes={categories} />\n      </section>\n      <section>{content}</section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PokemonItem\":\"PokemonItem_PokemonItem__3vllJ\"};"],"sourceRoot":""}