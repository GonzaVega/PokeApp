{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GonzaVega\\\\Desktop\\\\ProyectoPokeAPI\\\\src\\\\components\\\\PokemonTypeFilter.js\";\nimport React, { useState, useEffect } from \"react\";\nimport App from \"../App\";\nimport MoviesList from \"../components/MoviesList\";\nimport classes from \"./PokemonTypeFilter.module.css\";\n\nconst PokemonTypeFilter = props => {\n  const [filtered, setFiltered] = useState(\"\");\n  const [pokemon, setPokemon] = useState([]);\n  const [isValid, setIsValid] = useState(false);\n  const [isFiltered, setIsFiltered] = useState(false);\n  console.log(props.pokemonTypes);\n\n  const pokemonInputHandler = event => {\n    if (event.target.value.trim().length > 0) {\n      setIsValid(true);\n    }\n\n    setFiltered(event.target.value); // setPokemon(props.pokemonTypes);\n  };\n\n  let matchingType = [];\n\n  const typeFilterHandler = event => {\n    event.preventDefault(); // console.log(filtered);\n\n    const filteredPokemon = props.pokemonTypes.filter(type => type.name === filtered);\n\n    if (filteredPokemon.length > 0) {\n      setIsFiltered(true);\n    }\n\n    console.log(filteredPokemon);\n    return setPokemon(filteredPokemon);\n  };\n\n  console.log(pokemon);\n  let content = /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, \"Pokemon filter\", /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: typeFilterHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: filtered,\n    onChange: pokemonInputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"Filter Pok\\xE9mon by type\"))); //  (isValid && isFiltered) {\n  //     content = (\n  //       <ul className={classes[\"types-list\"]}>\n  //         <Movie\n  //           key=\"1\"\n  //           name={pokemon.name}\n  //           strongTo={pokemon.strongAgainst}\n  //           worstAgainst={pokemon.worstAgainst}\n  //         />\n  //       </ul>\n  //     );\n  //   }\n  // if (isValid && isFiltered) {\n  //   content = (\n  //     <div>\n  //       <Movie\n  //         key={matchingType.name}\n  //         name={matchingType.name}\n  //         strongTo={matchingType.strongAgainst}\n  //         worstAgainst={matchingType.worstAgainst}\n  //       />\n  //     </div>\n  //   );\n  // }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, content, isValid && isFiltered && /*#__PURE__*/React.createElement(MoviesList, {\n    movies: pokemon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 33\n    }\n  }), \";\");\n};\n\nexport default PokemonTypeFilter;","map":{"version":3,"names":["React","useState","useEffect","App","MoviesList","classes","PokemonTypeFilter","props","filtered","setFiltered","pokemon","setPokemon","isValid","setIsValid","isFiltered","setIsFiltered","console","log","pokemonTypes","pokemonInputHandler","event","target","value","trim","length","matchingType","typeFilterHandler","preventDefault","filteredPokemon","filter","type","name","content"],"sources":["C:/Users/GonzaVega/Desktop/ProyectoPokeAPI/src/components/PokemonTypeFilter.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport App from \"../App\";\r\nimport MoviesList from \"../components/MoviesList\";\r\nimport classes from \"./PokemonTypeFilter.module.css\";\r\nconst PokemonTypeFilter = (props) => {\r\n  const [filtered, setFiltered] = useState(\"\");\r\n  const [pokemon, setPokemon] = useState([]);\r\n  const [isValid, setIsValid] = useState(false);\r\n  const [isFiltered, setIsFiltered] = useState(false);\r\n  console.log(props.pokemonTypes);\r\n\r\n  const pokemonInputHandler = (event) => {\r\n    if (event.target.value.trim().length > 0) {\r\n      setIsValid(true);\r\n    }\r\n    setFiltered(event.target.value);\r\n    // setPokemon(props.pokemonTypes);\r\n  };\r\n  let matchingType = [];\r\n  const typeFilterHandler = (event) => {\r\n    event.preventDefault();\r\n    // console.log(filtered);\r\n    const filteredPokemon = props.pokemonTypes.filter(\r\n      (type) => type.name === filtered\r\n    );\r\n    if (filteredPokemon.length > 0) {\r\n      setIsFiltered(true);\r\n    }\r\n    console.log(filteredPokemon);\r\n    return setPokemon(filteredPokemon);\r\n  };\r\n  console.log(pokemon);\r\n  let content = (\r\n    <div>\r\n      Pokemon filter\r\n      <form onSubmit={typeFilterHandler}>\r\n        <input\r\n          type=\"text\"\r\n          value={filtered}\r\n          onChange={pokemonInputHandler}\r\n        ></input>\r\n        <button type=\"submit\">Filter Pok√©mon by type</button>\r\n      </form>\r\n    </div>\r\n  );\r\n  //  (isValid && isFiltered) {\r\n  //     content = (\r\n  //       <ul className={classes[\"types-list\"]}>\r\n  //         <Movie\r\n  //           key=\"1\"\r\n  //           name={pokemon.name}\r\n  //           strongTo={pokemon.strongAgainst}\r\n  //           worstAgainst={pokemon.worstAgainst}\r\n  //         />\r\n  //       </ul>\r\n  //     );\r\n  //   }\r\n  // if (isValid && isFiltered) {\r\n  //   content = (\r\n  //     <div>\r\n  //       <Movie\r\n  //         key={matchingType.name}\r\n  //         name={matchingType.name}\r\n  //         strongTo={matchingType.strongAgainst}\r\n  //         worstAgainst={matchingType.worstAgainst}\r\n  //       />\r\n  //     </div>\r\n  //   );\r\n  // }\r\n  return (\r\n    <div>\r\n      {content}\r\n      {isValid && isFiltered && <MoviesList movies={pokemon} />};\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonTypeFilter;\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,OAAP,MAAoB,gCAApB;;AACA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;EACnC,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,KAAD,CAAtC;EACA,MAAM,CAACa,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC,KAAD,CAA5C;EACAe,OAAO,CAACC,GAAR,CAAYV,KAAK,CAACW,YAAlB;;EAEA,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;IACrC,IAAIA,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,IAAnB,GAA0BC,MAA1B,GAAmC,CAAvC,EAA0C;MACxCX,UAAU,CAAC,IAAD,CAAV;IACD;;IACDJ,WAAW,CAACW,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX,CAJqC,CAKrC;EACD,CAND;;EAOA,IAAIG,YAAY,GAAG,EAAnB;;EACA,MAAMC,iBAAiB,GAAIN,KAAD,IAAW;IACnCA,KAAK,CAACO,cAAN,GADmC,CAEnC;;IACA,MAAMC,eAAe,GAAGrB,KAAK,CAACW,YAAN,CAAmBW,MAAnB,CACrBC,IAAD,IAAUA,IAAI,CAACC,IAAL,KAAcvB,QADF,CAAxB;;IAGA,IAAIoB,eAAe,CAACJ,MAAhB,GAAyB,CAA7B,EAAgC;MAC9BT,aAAa,CAAC,IAAD,CAAb;IACD;;IACDC,OAAO,CAACC,GAAR,CAAYW,eAAZ;IACA,OAAOjB,UAAU,CAACiB,eAAD,CAAjB;EACD,CAXD;;EAYAZ,OAAO,CAACC,GAAR,CAAYP,OAAZ;EACA,IAAIsB,OAAO,gBACT;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kCAEE;IAAM,QAAQ,EAAEN,iBAAhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IACE,IAAI,EAAC,MADP;IAEE,KAAK,EAAElB,QAFT;IAGE,QAAQ,EAAEW,mBAHZ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,eAME;IAAQ,IAAI,EAAC,QAAb;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,+BANF,CAFF,CADF,CA5BmC,CAyCnC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EACA,oBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACGa,OADH,EAEGpB,OAAO,IAAIE,UAAX,iBAAyB,oBAAC,UAAD;IAAY,MAAM,EAAEJ,OAApB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAF5B,MADF;AAMD,CAvED;;AAyEA,eAAeJ,iBAAf"},"metadata":{},"sourceType":"module"}